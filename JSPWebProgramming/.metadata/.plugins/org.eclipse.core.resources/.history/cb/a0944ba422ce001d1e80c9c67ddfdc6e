package ch10;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Method;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import org.apache.commons.beanutils.BeanUtils;

@WebServlet(urlPatterns = "/news.nhn")
@MultipartConfig(maxFileSize = 1024 *1024*2 , location = "c:/Temp/img") //뉴스이미지 파일 업로드 처리 위함
public class NewsController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	private NewsDAO dao;
	private ServletContext ctx;
	
	//웹 리소스 기본 경로지정
	private final String START_PAGE = "ch10/newsList.jsp";
	
	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		dao = new NewsDAO();
		ctx = getServletContext();
	}
       
	protected void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {
		request.setCharacterEncoding("utf-8");
		String action = request.getParameter("action");
		
		dao = new NewsDAO();
		
		Method m; //자바 리플렉션을 사용해 if(switch)없이 요청에 따라 구현 메서드가 실행되도록 구성
		String view = null;
		
		//action 파라미터 없이 접근한 경우
		if(action ==null) {
			action = "listNews";
		}
		try{
			//현재 클래스에서 action 이름과 HttpServletRequest를 파라미터로 하는 메서드 찾음
			m=this.getClass().getMethod(action, HttpServletRequest.class);
			
			//메서드 실행 후 리턴값 받아옴
			view = (String)m.invoke(this, request);
		}catch(NoSuchMethodException e) {
			e.printStackTrace();
			ctx.log("요청 action 없음");
			request.setAttribute("error", "action 파라미터가 잘못 됨");
			view = START_PAGE;
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		if(view.startsWith("redirect:/")) {
			String rview = view.substring("redirect:/".length());
			response.sendRedirect(rview);
		}else {
			RequestDispatcher dispatcher = request.getRequestDispatcher(view);
			dispatcher.forward(request, response);
		}
	}
    
	public String addNews(HttpServletRequest request) {
		News n = new News();
		try {
			Part part = request.getPart("file");
			String fileName = getFilename(part);
			if(fileName != null && !fileName.isEmpty()) {
				part.write(fileName);
			}
			BeanUtils.populate(n,request.getParameterMap());
			n.setImg("/img/"+fileName);
			dao.addNews(n);
		}catch(Exception e) {
			e.printStackTrace();
			ctx.log("뉴스추가 과정 문제 발생!");
			request.setAttribute("error","뉴스가 정상적으로 등록되지 않았습니다.");
			return listNews(request);
		}
		return "redirect:/news.nhn?action=listNews";
	}
	
	public String deletNews(HttpServletRequest request) {
		int aid = Integer.parseInt(request.getParameter("aid"));
		try {
			dao.delNews(aid);
		}catch(SQLException e) {
			e.printStackTrace();
			ctx.log("뉴스 삭제 과정 문제 발생!");
			request.setAttribute("error","뉴스가 정상적으로 삭제되지 않았습니다.");
			return listNews(request);
		}
		return "redirect:/news.nhn?action=listNews";
	}

	private String listNews(HttpServletRequest request) {
		List<News> list;
		try {
			list = dao.getAll();
			request.setAttribute("newslist", list);
		}catch(Exception e) {
			e.printStackTrace();
			ctx.log("뉴스 목록 생성 과정 문제 발생!");
			request.setAttribute("error","뉴스목록이 정상적으로 처리되지 않았습니다.");
		}
		return "ch10/newsList.jsp";
	}
	
	public String getNews(HttpServletRequest request) {
		int aid = Integer.parseInt(request.getParameter("aid"));
		
		try {
			News n = dao.getNews(aid);
			request.setAttribute("news", n);
		}catch(SQLException e) {
			e.printStackTrace();
			ctx.log("뉴스를 가져오는 과정에서 문제 발생");
			request.setAttribute("error", "뉴스를 정상적으로 가져오지 못했습니다.");
		}
		return "ch10/newsView.jsp";
		
	}

	private String getFilename(Part part) {
		String fileName = null;
		String header = part.getHeader("content-disposition");
		System.out.println("Header => "+header);
		int start = header.indexOf("filename=");
		fileName = header.substring(start+10,header.length()-1);
		return null;
	}

}
